/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ShrubberyCreationForm.cpp                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: rsaf <rsaf@student.42.fr>                  +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/01/03 05:46:23 by rsaf              #+#    #+#             */
/*   Updated: 2023/01/03 10:00:13 by rsaf             ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "ShrubberyCreationForm.hpp"
#include <fstream>

ShrubberyCreationForm::ShrubberyCreationForm() : AForm("_NOname", 145, 137)
{
	std::cout << "ShrubberyCreationForm constructor\n";
}

ShrubberyCreationForm::ShrubberyCreationForm(std::string target)  : AForm(target, 145, 137)
{
	std::cout << "ShrubberyCreationForm constructor\n";
}

ShrubberyCreationForm::ShrubberyCreationForm(const ShrubberyCreationForm& obj) : AForm(obj)
{
	std::cout << "ShrubberyCreationForm copy constructor\n";
}

ShrubberyCreationForm& ShrubberyCreationForm::operator=(const ShrubberyCreationForm &obj)
{
    std::cout << "Assignment opeartor\n";
    (void)obj;
    return *this;
}

ShrubberyCreationForm::~ShrubberyCreationForm()
{
    std::cout << "ShrubberyCreationForm destructor\n";
}

void ShrubberyCreationForm::execute(const Bureaucrat &caller) const
{
    if (caller.getGrade() < this->getGradeSign() && this->getSign()){
        std::ofstream file(this->getName() + "_shrubbery");
        file << " ###########################`######################################\n";
        file << " ###########################  V####################################\n";
        file << " #########################V  `V  ##################################\n";
        file << " ########################V      ,##################################\n";
        file << " #########`#############V      ,A###########################V######\n";
        file << " ######## `###########V      ,###########################V,########\n";
        file << " ######V   ###########l      ,####################V~~~~,###########\n";
        file << " #####V    ###########l      ##P ###########V~~   ,A###############\n";
        file << " #####l      d#########l      V  ,#######V~       A################\n";
        file << " #####l      ##########l         ,####V         ,##################\n";
        file << " #####l        `V######l        ,###V   .....;A####################\n";
        file << " #####A,         `######A,     ,##V ,A#############################\n";
        file << " #######A,        `######A,    #V  A###############################\n";
        file << " ##########,,,       `####A,           `#             ,,,##########\n";
        file << " #############A,                               ,,,     ,###########\n";
        file << " ######################oooo,                 ;####, ,##############\n";
        file << " ##################P                   A,   ;#####V################\n";
        file << " #####P           ,###             `#,     `V######################\n";
        file << " ##P                ,d###;               ,        V################\n";
        file << " ##########A,,   #########A              )##,    ##A,..,ooA########\n";
        file << " #############A, Y#########A,            )####, ,##################\n";
        file << " ###############A ############A,        ,###### ###################\n";
        file << " ###############################       ,#######V###################\n";
        file << " ###############################      ,############################\n";
        file << " ##############################P    ,d#############################\n";
        file << " ##############################    d###############################\n";
        file << " ##############################     ###############################\n";
        file << " ##############################     ###############################\n";
        file << " #############################P     ###############################\n";
        file << " #############################     ################################\n";
        file << " ############################P      ###############################\n";
        file << " ###########################P     ;################################\n";
        file << " ###########################     ,#################################\n";
        file << " ##########################       #################################\n";
        file << " #########################       ,#################################\n";
        file << " ########################        d###########P    `Y###############\n";
        file << " #######################        ,############        ##############\n";
        file << " ######################        ,#############        ##############\n";
        file << " #####################        ,##############b.    ,d##############\n";
        file << " ####################        ,#####################################\n";
        file << " ###################         ######################################\n";
        file << " ##################          #######################P  `V##P       \n";
        file << " #######P     `V#           ###################P                   \n";
        file << " #####P                    ,#################P                     \n";
        file << " ###P                      d##############P                        \n";
        file << " ##P                       V##############                         \n";
        file << " #P                         `V###########                          \n";
        file << " #                             `V##P                               \n";
    }
    else
        throw (GradeTooLowException());
}